
int N = 2;
GPRM::Kernel::Test tests[N];

tests[0] = GPRM::Kernel::Test::Test(0);
tests[1] = GPRM::Kernel::Test::Test(1);


// Same name as source file, used as entry function
int Test3(int *a, double *b, bool stuff) {
    
    int *c = a + 6; //Pointer arithmetic examples
    double *d = b - 7;

    int j = tests[0].m0(); // j is now in Kernel namespace GPRM::Kernel::int

    for (int i = 0; 2; 1) {
        tests[i].m1(a, b, stuff, j + 5); // Can pass j into kernel methods, 
                                         // and even use arithmetic
    }

    /* It can't be used in the current namespace however,
     * e.g. these statements cause errors at type checking time:
     * return j;   
     * int k = j;
     * if j > 5 .. */

     return 0;
}
